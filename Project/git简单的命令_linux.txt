工具下载
百度git 然后下载，全部默认安装

工具Carnac     好用的工具，可以在屏幕上显示你输入的字母和字符串




***
练习（重要）：把新增的所有文件上传到github
git clone https://github.com/zxy15914507674/hello  #把远程仓库扒下来
cd hello              #进入仓库
把所需要上传的文件都复制到本地仓库下demo的文件夹内容
git add  .      #添加所有文件
git commit -m  "所有文件重新提交"
git push https://github.com/zxy15914507674/hello master  #前提是hello仓库在github上存在





cd      #打开目录
mv     #移动文件夹
mkdir  #创建文件夹
cp       #复制文件
pwd    #当前目录
rm     #删除文件

下面是简单的练习
pwd    
mkdir hello
cd hello
pwd
echo 'hello'
echo 'hello' >a.txt
cat a.txt                   #打印a.txt里面的内容

cp a.txt b.txt

ls ..                       #列出上一级目录的所有文件及文件夹

mv b.txt hello/b.txt         #移动到下一级目录
ls

rm c.txt




设置git参数

git   config  --list   #显示当前的Git配置

git config --global user.name "张祥裕"    #设置提交仓库时的用户信息

git  config --global user.email "2847225301@qq.com"   #设置提交仓库时的邮箱信息


练习：
clear 
git config --list
git config --global user.name "zxy15914507674"
git config --global user.email  "2847225301@qq.com"
cd ~                 #回到主目录
ls
ls -a                   #列出所有的文件
vim .gitconfig      #编辑这个配置文件
i                   #可以编辑文件
Ctrl +C   #强制退出编辑模式，多按几次，直到出现:qa!为止
:qa!                #推出编辑模式



vim编辑器的用法(百度)


vim解决输入中文的问题
Option/Text   local 选zh_CN  Character set 选UTF-8





git提交代码到本地仓库上


新建代码仓库
git init    #在当前目录下新建一个git代码库

git clone [url]  #下载一个项目和它的整个整个代码历史
# url格式：http://gitub.com/[userName]/resposName

添加删除文件
git add [file1] [file2] #添加指定文件到暂存区

git rm [file1] [file2]  #删除工作区文件，并且将这次删除放入暂存区

git mv [file-origin] [file-renamed]   # 改名文件，并且将这个改名放入暂存区


代码提交

git commit -m [message]   #提交暂存区到仓库

git commit -a -m [message] # 直接从工作区提交到仓库，前题是该文件已经有仓库中的历史版本

查看信息

git status  #显示变更信息

git log 
git log --oneline   #显示当前分支的历史版本



练习：
mkdir demo
cd demo
git init 
ls
ls -a
ls .git/
git status
clear
vim README.md  #新建README文件
i 
# README
Hello Git !
Ctrl +C
:wq!   #保存退出   

cat README.md  # 查看文件的内容
git status
git add README.md  #可以 git add R+tab键自动补全
git status
git commit -m "第一次提交"
git status
vim README.md
o键    #插入模式
第一练习  git Bash命令
Ctrl +C
:wq!
cat README.md
git status
git commit -a -m "增加了一些信息"
git staus
git log
git show 复制你想看的版本commit后面的值
复制其它文件到demo文件夹下,如index.html
git add index.html
git commit -m "提交"
git status



把本地仓库推送到远程仓库上


同步远程仓库
git remote add [shortname] [url]   #增加远程仓库，并命名
git push [remote] [branch]  #将本地的提交推送到远程仓库
git pull [remote] [branch]  #将远程仓库的提交拉下到本地

练习：
在远程创建demo仓库
git remote add origin  https://gitub.com/zxy15914507674/demo  #origin是https://gitub.com/zxy15914507674/demo的别名
git remote -v
ls 
git push origin master    #origin代表https://gitub.com/zxy15914507674/demo
回车弹出对话框提示输入github上的用户名和密码
新建文件夹 doc
cd doc
ls
cp ../README.md doc.md   #复制文件
git status
cd ..
git status
git add .  
git status
git commit -m "增加了文件夹"
git push origin master
前面已经输入过用户名和密码，这里就不用输入了











git pull origin master   #把远程仓库demo拽到本地保持同步


练习：
在远程仓库hello,添加readme文件
git clone https://github.com/zxy15914507674/hello  #把远程仓库扒下来
cd hello              #进入仓库
修改内容
git commit -a -m  "修改了一些内容"
git push
输入用户名
弹框输入密码





 



